/****************************************************************************
**
** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \page sensorgestureexample.html
    \title C++ Sensor Gestures Example
    \ingroup qtsensors-examples
    \brief The sensor gesture example demonstrates the steps for creating a C++ application
     that uses sensor gestures and the included shake sensor.
    \image sensorgesturecpp.png

    QSensorGestures class defines one predefined signal, \c { void detected(const QString &) }

    As well, Sensor Gesture Recognizers may implement any number of their own custom signals.

    Our shake recognizer defines one custom signal, \c {void shake()}, as well as the predefined
    detected signal.

    \section1 SensorGestures Class Implementation

    In order to know about custom signals that may be available, we need to ask the QSensorGestureManager about them,

    Using the QSensorGesture::gestureIds() function, the manager will return a QStringList of known and valid gesture Ids.
    \snippet ../examples/sensors/sensorgestures/mainwindow.cpp 0

    We can then use this to create a QSensorGesture object that we can use to connect signals to,
    and start the detection process. A QSensorGesture object will take a list of one or more
    recognizer ids in it's constructor.

    \snippet ../examples/sensors/sensorgestures/mainwindow.cpp 1

    and later stop the detection process.

    \snippet ../examples/sensors/sensorgestures/mainwindow.cpp 2

    The QSensorGesture object will contain all the signals of the valid  requested recognizers found on the system.

    You can discover which of the requested recognizer ID's that were not found by using QSensorGesture::invalidIds();

    By using QSensorGesture::gestureSignals(), you can get a QStringList of usable signals.


*/
