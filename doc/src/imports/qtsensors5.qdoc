/****************************************************************************
**
** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \qmlmodule QtSensors 5
    \title Qt Sensors QML API
    \brief The QML import for Qt Sensors

    \section1 Overview


    Mobile devices contains sensor hardware that allow detecting changes in various physical
    properties of the device itself or its immediate environment. Examples of device properties
    include the angle at which the device is held, whereas environmental properties include for
    example the current level of ambient light.

    These properties can be either actual values, such as the tilt angle in
    degrees, or approximations, like the enumeration describing brightness in
    relative terms using values such as AmbientLightSensor.Dark and AmbientLightSensor.Bright.

    The latter type of value is also based on a natural phenomenon (in the case
    of the ambient light sensor, the amount of visible light emitted by a source), but the value
    itself is descriptive instead of using any effective unit of measurement, such as lumen.

    The identifying string for this component is \e QtSensors.
    Use this in the QML import statement, as such: \e import QtSensors 5.0

    Qt Sensors QML API provides an easy to use interface to the Qt Sensors API.
    It enables the receiving of sensor events and reading current values from the
    sensors.

    The emulator supports simulating the Ambient Light, Orientation, Compass and Proximity sensors.

    The \l {QML Qt Sensors example} contains code for using the the \l TiltSensor, \l AmbientLightSensor
    and ProximitySensor elements.

    \section1 QML Elements

*/


