/****************************************************************************
**
** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/legal
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Digia.  For licensing terms and
** conditions see http://qt.digia.com/licensing.  For further information
** use the contact form at http://qt.digia.com/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.  Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: http://www.gnu.org/copyleft/fdl.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \qmlmodule QtSensors 5
    \title Qt Sensors QML API
    \brief The QML import for Qt Sensors

    \section1 Overview


    Mobile devices contains sensor hardware that allow detecting changes in various physical
    properties of the device itself or its immediate environment. Examples of device properties
    include the angle at which the device is held, whereas environmental properties include for
    example the current level of ambient light.

    These properties can be either actual values, such as the tilt angle in
    degrees, or approximations, like the enumeration describing brightness in
    relative terms using values such as AmbientLightSensor.Dark and AmbientLightSensor.Bright.

    The latter type of value is also based on a natural phenomenon (in the case
    of the ambient light sensor, the amount of visible light emitted by a source), but the value
    itself is descriptive instead of using any effective unit of measurement, such as lumen.

    The identifying string for this component is \e QtSensors.
    Use this in the QML import statement, as such: \e import QtSensors 5.0

    Qt Sensors QML API provides an easy to use interface to the Qt Sensors API.
    It enables the receiving of sensor events and reading current values from the
    sensors.

    The emulator supports simulating the Ambient Light, Orientation, Compass and Proximity sensors.

    The \l {Qt Sensors - QML example} contains code for using the the \l TiltSensor, \l AmbientLightSensor
    and ProximitySensor types.

    \section1 QML Types

*/


